# 特徵向量捕獲配置示例文件
# 此配置文件展示了如何設置特定層的特徵向量捕獲和相似度分析
# 使用命令: python scripts/run_experiments.py --config config/example_feature_vectors.yaml

# 全局配置 - 設置實驗環境和輸出
global:
  experiment_name: 'audio_feature_vectors'    # 實驗名稱，用於日誌和輸出文件命名
  seed: 42                                   # 隨機種子，確保結果可重現
  debug: false                               # 是否啟用調試模式
  device: 'auto'                             # 訓練設備，'auto'會自動選擇GPU或CPU
  output_dir: 'results'                      # 輸出目錄，存放模型、日誌和結果
  logging_level: 'INFO'                      # 日誌級別，可選'DEBUG', 'INFO', 'WARNING', 'ERROR'

# 數據配置 - 定義數據加載和預處理方式
data:
  type: 'feature'                            # 數據類型，改為feature而非audio
  
  # 新增索引CSV支持
  use_index: true                            # 是否使用索引CSV加載數據
  index_path: 'data/metadata/selection_groups/biscuit_20250516_230749.csv'   # 索引CSV文件路徑
  label_field: 'DrLee_Evaluation'            # 標籤欄位名稱: 'score'(41類), 'DrLee_Evaluation'(3類), 'DrTai_Evaluation'(4類), 'selection'(10類)
  filter_criteria:                           # 篩選條件
    status: null                             # 數據處理狀態，'raw', 'processed', 'failed'，或null表示不篩選
    selection: null                          # 錄音時的動作類型，如'乾吞嚥1口'，或null表示不篩選
  
  # 特徵配置
  preprocessing:
    features:
      normalize: true                        # 是否標準化特徵
      max_feature_dim: 2868224               # 最大特徵維度
      padding_mode: 'center'                 # 填充模式，'right'(原始方式)或'center'(置中填充)
      compression_method: 'pca'              # 壓縮方法，'pca'(PCA降維)或null(不壓縮)
      target_dim: 1024                       # PCA降維的目標維度，應與模型的input_dim一致
  
  # 數據集拆分 - 定義訓練、驗證和測試集的劃分方式
  splits:
    train_ratio: 0.7                         # 訓練集比例
    val_ratio: 0.15                          # 驗證集比例
    test_ratio: 0.15                         # 測試集比例
    split_seed: 42                           # 拆分隨機種子
    split_by_patient: true                   # 按患者ID拆分，確保同一患者的數據不會同時出現在訓練和測試集
  
  # 數據轉換 - 數據增強和預處理
  transforms:
    train: {}                                # 特徵數據集通常不需要數據增強
    val: {}                                  # 驗證集不使用數據增強
    test: {}                                 # 測試集不使用數據增強
  
  # 數據加載器配置 - 設置批處理和並行加載
  dataloader:
    batch_size: 8                            # 批大小
    num_workers: 4                           # 數據加載線程數
    pin_memory: true                         # 是否將數據固定在內存中（GPU訓練時有用）
    drop_last: false                         # 是否丟棄最後一個不完整批次

model:
  type: 'fcnn'
  parameters:
    input_dim: 1024                          # 輸入維度，應與features.npy文件中的特徵維度匹配
    hidden_layers: [512, 256, 128]
    num_classes: 3                           # 根據DrLee_Evaluation的類別數設為3
    dropout_rate: 0.3
    activation: 'relu'
    is_classification: true
    batch_norm: true

# 訓練配置 - 定義訓練過程和優化器
training:
  epochs: 10                                 # 訓練輪數
  save_every: 5                              # 每隔多少輪保存一次模型
  early_stopping:                            # 早停機制，防止過擬合
    enabled: true                            # 啟用早停
    patience: 10                             # 容忍輪數，驗證指標不再改善時等待的輪數
    min_delta: 0.001                         # 最小改善閾值
  
  optimizer:                                 # 優化器配置
    type: 'Adam'                             # 使用Adam優化器
    parameters:
      lr: 0.001                              # 學習率
      weight_decay: 0.0001                   # 權重衰減（L2正則化）
  
  lr_scheduler:                              # 學習率調度器
    type: 'ReduceLROnPlateau'                # 根據驗證指標調整學習率
    parameters:
      mode: 'min'                            # 監控模式，'min'表示指標越小越好
      factor: 0.5                            # 學習率衰減因子
      patience: 5                            # 容忍輪數
      min_lr: 1.0e-6                         # 最小學習率
  
  loss:                                      # 損失函數配置
    type: 'CrossEntropyLoss'                 # 使用交叉熵損失（適用於分類任務）
    parameters:
      reduction: 'mean'                      # 損失縮減方式
  
  gradient_clipping:                         # 梯度裁剪，防止梯度爆炸
    enabled: true                            # 啟用梯度裁剪
    max_norm: 1.0                            # 最大梯度範數

# 評估配置 - 定義模型評估方式
evaluation:
  metrics:                                   # 評估指標
    - 'accuracy'                             # 準確率
    - 'precision'                            # 精確率
    - 'recall'                               # 召回率
    - 'f1'                                   # F1分數
  
  validation:                                # 驗證配置
    frequency: 1                             # 每訓練多少輪進行一次驗證
    best_model_metric: 'accuracy'            # 用於保存最佳模型的指標
    best_model_mode: 'max'                   # 指標模式，'max'表示越大越好
  
  inference:                                 # 推理配置
    batch_size: 8                           # 推理批大小
    save_predictions: true                   # 是否保存預測結果

# # 可視化配置 - 定義訓練過程和結果的可視化
# visualization:
#   enabled: true                              # 是否啟用可視化
  
#   tensorboard:                               # TensorBoard可視化
#     enabled: true                            # 啟用TensorBoard
#     log_dir: 'tensorboard_logs'              # TensorBoard日誌目錄
  
#   confusion_matrix:                          # 混淆矩陣可視化
#     enabled: true                            # 啟用混淆矩陣
#     normalize: 'true'                        # 是否標準化混淆矩陣
  
#   tsne:                                      # t-SNE降維可視化
#     enabled: true                            # 啟用t-SNE
#     perplexity: 30                           # t-SNE困惑度參數
#     n_components: 2                          # 降維後的維度 

# # Hook配置 - 啟用各種模型分析和數據收集鉤子
# hooks:
#   # 模型分析鉤子：收集層激活值和梯度
#   model_analytics:
#     enabled: true
#     monitored_layers: ['backbone.0', 'backbone.4', 'backbone.5', 'backbone.6', 'backbone.7', 'head']  # 監控主要層
#     monitored_params: ['head.2.weight', 'head.2.bias']   # 監控分類頭的權重和偏置
#     save_frequency: 1  # 保存頻率（每 N 個 epoch 保存一次）
#     save_validation_predictions: true  # 是否在每個 epoch 保存驗證集預測結果
  
#   # 評估結果捕獲鉤子：收集測試集的真實標籤和模型預測（用於混淆矩陣）
#   evaluation_capture:
#     enabled: true
#     datasets: ['test', 'val']  # 要捕獲結果的數據集
#     save_probabilities: true  # 是否保存類別概率（用於 ROC 曲線）
  
#   # 激活值捕獲鉤子：收集特定層的激活值和特徵向量（用於餘弦相似度和t-SNE分析）
#   activation_capture:
#     enabled: true
#     # 以下是要捕獲特徵向量的層，根據模型類型選擇合適的層
#     # 對於 CNN 類模型，建議選擇主要卷積層和全連接層
#     # 對於 ResNet 模型，可選擇如下層：
#     target_layers: [
#       'backbone.4',    # 中間層特徵圖
#       'backbone.7',    # 最後一個卷積層
#       'head.0'         # 倒數第二個全連接層
#     ]
#     # 要在哪些數據集上捕獲特徵向量
#     datasets: ['test', 'val']
    

#     # save_frequency: 5

#     # 是否必須捕獲第一個和最後一個epoch的特徵向量（使用save_frequency時有效）
#     save_first_last: true
    
#     # 是否計算餘弦相似度
#     compute_similarity: true
    
#     # 是否計算t-SNE嵌入
#     compute_tsne: true
    
#     # 是否包含樣本ID
#     include_sample_ids: true
    
#     # 當無法獲取真實標籤時是否生成隨機標籤
#     generate_random_labels: false 